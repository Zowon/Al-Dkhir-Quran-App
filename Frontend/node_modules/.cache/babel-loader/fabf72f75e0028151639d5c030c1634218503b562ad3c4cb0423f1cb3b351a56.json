{"ast":null,"code":"var _jsxFileName = \"/home/tahanafis2003/Documents/AL-Dhikr/Frontend/src/components/SurahDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurahDetail = () => {\n  _s();\n  const {\n    surahNumber\n  } = useParams(); // Get the Surah number from the URL\n  const [ayahs, setAyahs] = useState([]);\n  const [translations, setTranslations] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Fetch Ayahs\n    fetch(`http://localhost:5000/surah/${surahNumber}`).then(response => response.json()).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setAyahs(data);\n      }\n    }).catch(() => setError('Error fetching Ayahs.'));\n\n    // Fetch Translations\n    fetch(`http://localhost:5000/translation/${surahNumber}`).then(response => response.json()).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setTranslations(data);\n      }\n    }).catch(() => setError('Error fetching translations.'));\n  }, [surahNumber]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Surah \", surahNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ayahs.map((ayah, index) => {\n        var _translations$index;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Ayah \", ayah.Ayah_Number, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), ayah.Ayah_Text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Translation: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), ((_translations$index = translations[index]) === null || _translations$index === void 0 ? void 0 : _translations$index.Ayah_Translation) || 'Loading translation...']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(SurahDetail, \"hOc1OW+Jjt4BqzsX2DI7u4bxGAo=\", false, function () {\n  return [useParams];\n});\n_c = SurahDetail;\nexport default SurahDetail;\nvar _c;\n$RefreshReg$(_c, \"SurahDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","SurahDetail","_s","surahNumber","ayahs","setAyahs","translations","setTranslations","error","setError","fetch","then","response","json","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","ayah","index","_translations$index","Ayah_Number","Ayah_Text","Ayah_Translation","_c","$RefreshReg$"],"sources":["/home/tahanafis2003/Documents/AL-Dhikr/Frontend/src/components/SurahDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst SurahDetail = () => {\n  const { surahNumber } = useParams(); // Get the Surah number from the URL\n  const [ayahs, setAyahs] = useState([]);\n  const [translations, setTranslations] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    // Fetch Ayahs\n    fetch(`http://localhost:5000/surah/${surahNumber}`)\n      .then(response => response.json())\n      .then(data => {\n        if (data.error) {\n          setError(data.error);\n        } else {\n          setAyahs(data);\n        }\n      })\n      .catch(() => setError('Error fetching Ayahs.'));\n\n    // Fetch Translations\n    fetch(`http://localhost:5000/translation/${surahNumber}`)\n      .then(response => response.json())\n      .then(data => {\n        if (data.error) {\n          setError(data.error);\n        } else {\n          setTranslations(data);\n        }\n      })\n      .catch(() => setError('Error fetching translations.'));\n  }, [surahNumber]);\n\n  return (\n    <div>\n      <h1>Surah {surahNumber}</h1>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <div>\n        {ayahs.map((ayah, index) => (\n          <div key={index}>\n            <p>\n              <strong>Ayah {ayah.Ayah_Number}: </strong>\n              {ayah.Ayah_Text}\n            </p>\n            <p>\n              <strong>Translation: </strong>\n              {translations[index]?.Ayah_Translation || 'Loading translation...'}\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SurahDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}